package templates

import (
	"fmt"
	"github.com/esizer/grddrw/data"
	"github.com/esizer/grddrw/templates/components"
)

css paint(px *data.Pixel) {
	background-color: { templ.SafeCSSProperty(fmt.Sprintf("rgb(%d,%d,%d)", px.R, px.G, px.B)) };
}

templ Grid(g data.Grid) {
	@components.Layout("Grid") {
		<script>
			document.addEventListener("alpine:init", () => {
				Alpine.data("palette", () => ({
					color: "#ff0000",
				}))
			});
		</script>
		<form>
			<div x-data="palette" class="mx-auto my-4 p-4 w-full max-w-screen-md flex flex-col gap-4 items-center">
				<div class="grid grid-cols-16 auto-rows-fr border-collapse bg-slate-600 border border-slate-600 shadow w-full">
					for _, p := range g.Pixels {
						@Pixel(p)
					}
				</div>
				<input type="color" name="color" x-model.debounce.throttle="color"/>
			</div>
		</form>
	}
}

templ Pixel(p *data.Pixel) {
	<button
		class={ "aspect-square border border-slate-900", paint(p) }
		hx-trigger="click"
		hx-put="/pixel"
		hx-swap="outerHTML"
	></button>
}
